// MXQL Grammar Definition
// This grammar defines the syntax for Machine Learning SQL extensions

start: statement+

statement: create_model_stmt
         | create_ml_view_stmt
         | drop_model_stmt
         | drop_ml_view_stmt
         | list_models_stmt
         | model_info_stmt
         | export_model_stmt
         | import_model_stmt
         | evaluate_model_stmt
         | fine_tune_model_stmt
         | explain_model_stmt
         | create_pipeline_stmt
         | create_feature_store_stmt

// CREATE MODEL statement
create_model_stmt: "CREATE" "MODEL" model_name
                  "USING" "algorithm" "=" string_value
                  train_clause
                  predict_clause?
                  with_features_clause?
                  hyperparameters_clause?
                  preprocess_clause?
                  validation_clause?
                  ";"

// TRAIN ON clause
train_clause: "TRAIN" "ON" table_name
            | "TRAIN" "ON" "(" query ")"

// PREDICT clause
predict_clause: "PREDICT" column_name

// WITH FEATURES clause
with_features_clause: "WITH" "FEATURES" column_list

// HYPERPARAMETERS clause
hyperparameters_clause: "HYPERPARAMETERS" json_object

// PREPROCESS clause
preprocess_clause: "PREPROCESS" "WITH" json_object

// VALIDATION clause
validation_clause: "VALIDATION" (validation_split | validation_table)

validation_split: "SPLIT" NUMBER
validation_table: "TABLE" table_name "WITH" "FEATURES" column_list ("PREDICT" column_name)?

// CREATE ML_VIEW statement
create_ml_view_stmt: "CREATE" "ML_VIEW" view_name "AS"
                    "SELECT" select_items
                    "FROM" table_name
                    where_clause?
                    ";"

select_items: select_item ("," select_item)*
select_item: "*" | column_name | ml_function "AS" column_name

ml_function: predict_function | classify_function | cluster_function | embedding_function | explain_function

predict_function: "PREDICT" "(" model_name ("," json_object)? ")"
classify_function: "CLASSIFY" "(" model_name ("," json_object)? ")"
cluster_function: "CLUSTER" "(" model_name ("," json_object)? ")"
embedding_function: "EMBEDDING" "(" model_name ("," json_object)? ")"
explain_function: "EXPLAIN" "(" model_name ("," json_object)? ")"

where_clause: "WHERE" condition

// DROP MODEL statement
drop_model_stmt: "DROP" "MODEL" model_name ";"

// DROP ML_VIEW statement
drop_ml_view_stmt: "DROP" "ML_VIEW" view_name ";"

// LIST MODELS statement
list_models_stmt: "LIST" "MODELS" ";"

// MODEL INFO statement
model_info_stmt: "SHOW" "MODEL" "INFO" model_name ";"

// EXPORT MODEL statement
export_model_stmt: "EXPORT" "MODEL" model_name "TO" string_value ";"

// IMPORT MODEL statement
import_model_stmt: "IMPORT" "MODEL" model_name "FROM" string_value 
                  ("WITH" "FEATURES" column_list)? ";"

// EVALUATE MODEL statement
evaluate_model_stmt: "EVALUATE" "MODEL" model_name 
                    "ON" (table_name | "(" query ")")
                    ("WITH" "METRICS" string_list)? ";"

// FINE TUNE MODEL statement
fine_tune_model_stmt: "FINE" "TUNE" "MODEL" model_name 
                     "FROM" base_model_name
                     "USING" "data" "=" table_name
                     ("WITH" "PARAMETERS" json_object)? ";"

// EXPLAIN MODEL statement
explain_model_stmt: "EXPLAIN" "MODEL" model_name
                   ("FOR" "INSTANCE" "(" column_values ")")?
                   ("USING" "method" "=" string_value)?
                   ";"

// CREATE PIPELINE statement
create_pipeline_stmt: "CREATE" "PIPELINE" pipeline_name
                     "STEPS" "(" pipeline_steps ")"
                     ";"

pipeline_steps: pipeline_step ("," pipeline_step)*
pipeline_step: "(" step_number "," step_type "," step_parameters ")"

// CREATE FEATURE STORE statement
create_feature_store_stmt: "CREATE" "FEATURE" "STORE" feature_store_name
                          "FROM" table_name
                          "KEYS" "(" column_list ")"
                          "FEATURES" "(" feature_definitions ")"
                          ";"

feature_definitions: feature_definition ("," feature_definition)*
feature_definition: feature_name "=" expression

// Basic elements
model_name: IDENTIFIER
view_name: IDENTIFIER
table_name: IDENTIFIER
column_name: IDENTIFIER
column_list: column_name ("," column_name)*
pipeline_name: IDENTIFIER
feature_store_name: IDENTIFIER
feature_name: IDENTIFIER
base_model_name: IDENTIFIER
step_number: NUMBER
step_type: STRING
step_parameters: json_object
expression: STRING  // Simplified for now
string_list: string_value ("," string_value)*
condition: STRING  // Simplified for now
column_values: column_value ("," column_value)*
column_value: STRING | NUMBER | "NULL"
query: STRING  // Simplified for now, represents a SQL query

// JSON-like object definition
json_object: "{" [pair ("," pair)*] "}"
pair: string_value ":" value
value: string_value | number_value | boolean_value | json_object | json_array | "null"
json_array: "[" [value ("," value)*] "]"
string_value: STRING
number_value: NUMBER
boolean_value: "true" | "false"

// Terminals
IDENTIFIER: /[a-zA-Z_][a-zA-Z0-9_]*/
STRING: /"[^"]*"/ | /'[^']*'/
NUMBER: /\d+(\.\d+)?/

// Ignore whitespace and comments
COMMENT: /--[^\n]*/
%import common.WS
%ignore WS
%ignore COMMENT
